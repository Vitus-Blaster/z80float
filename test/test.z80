#define bcall(x) rst 28h \ .dw x
#include "../extended/float.inc"
#define test(x,y,s) call testputs \ .db s,0 \ ld hl,x \ ld de,y \ call subtest
penCol    = 86D7h
penRow    = 86D8h
_VPutS    = 4561h
fontFlags     = 32h
fracDrawLFont = 2
sGrFlags      = 14h
textWrite     = 7
_GrBufClr     = 4BD0h
_GrBufCpy     = 486Ah
_PutS         = 450Ah
.db $BB,$6D
.org $9D95
  bcall(_GrBufClr)
  res fracDrawLFont,(iy + fontFlags)
  set textWrite, (IY + sGrFlags)
  ld hl,0
  ld (penCol),hl
  call +_
  bcall(_GrBufCpy)
  ret
_:
;;Hey, add more tests here!

  rsubx(const_pi,const_e,fpOP4)
  mulx(fpOP4,pown10table+100,fpOP4)
  call testputs \ .db "(e-pi)/10000=",0
;  test(fpOP4,e_min_pi,"(e-pi)/10000")
  strx(fpOP4,fpOP1)
  ld h,b
  ld l,c
  call puts

  mulx(const_pi,const_e,fpOP4)
  mulx(fpOP4,pow10table+80,fpOP4)
  call testputs \ .db "(e*pi)*10^16=",0
  strx(fpOP4,fpOP1)
  ld h,b
  ld l,c
  call puts

  sqrtx(const_pi,fpOP1)
  call testputs \ .db "sqrt(pi)=",0
  strx(fpOP1,fpOP1)
  ld h,b
  ld l,c
  call puts



  ret
e_min_pi:
  .db $18,$BD,$6B,$F5,$4B,$32,$BC,$D8,$FE,$BF



subtest:
  ld bc,8000h
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex \ inc hl \ inc de
  ld a,(de) \ xor (hl) \ call tohex
  xor a
  ld (bc),a
  ld l,a
  ld h,b
  bcall(_VPutS)
  ld hl,(penCol)
  ld l,0
  ld a,6
  add a,h
  ld h,a
  ld (penCol),hl
  ret
tohex:
  push af
  and $0F
  add a,'0'
  cp $3A
  jr c,$+4
  add a,7
  ld (bc),a
  inc bc
  pop af
  rrca
  rrca
  rrca
  rrca
  and $0F
  add a,'0'
  cp $3A
  jr c,$+4
  add a,7
  ld (bc),a
  inc bc
  ret
testputs:
  ex (sp),hl
  call puts
  ex (sp),hl
  ret
puts:
  push de
  push bc
  push af
  bcall(_VPutS)
  ex de,hl
  ld hl,(penCol)
  ld l,0
  ld a,6
  add a,h
  ld h,a
  ld (penCol),hl
  ex de,hl
  pop af
  pop bc
  pop de
  ret

#include "../extended/xtostr.z80"
#include "../extended/xsqrt.z80"
#include "../extended/xdiv.z80"
#include "../extended/xmul.z80"
#include "../extended/xadd.z80"
#include "../extended/mul/sqr32.z80"
xroutines:
#include "../extended/routines.z80"
.echo "routines: ",$-xroutines
#include "../extended/data.z80"
#include "../extended/tables.z80"
.echo "Total: ",$-$9D95
#include "../extended/constants.z80"
