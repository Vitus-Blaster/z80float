xmul3:
  push hl
  push de
  push bc
  push af
  push bc
  call +_
  pop de
  ld hl,fpOP1
  call mov10
  pop af
  pop bc
  pop de
  pop hl
  ret
_:
  ld de,fpOP1
  call mov10
  ld hl,(fpOP1+8)
  ld a,h
  or l
  ret z
  ld hl,fpOP1
  call mov8
  dec hl \ srl (hl)
  dec hl \ rr (hl)
  dec hl \ rr (hl)
  dec hl \ rr (hl)
  dec hl \ rr (hl)
  dec hl \ rr (hl)
  dec hl \ rr (hl)
  dec hl \ rr (hl)
  ld de,fpOP2
  ex de,hl
  call adc64
  ex de,hl
  push af
  call c,rr64
  ld hl,fpOP1+8
  pop af
  ld a,(hl)
  adc a,1
  ld (hl),a
  ret nc
  inc hl
  ld a,(hl)
  inc (hl)
  xor (hl)
  ret p
constmul_overflow:
  xor $80
  ld (hl),a
  ld hl,fpOP1+7
  ld (hl),-1
  ret
