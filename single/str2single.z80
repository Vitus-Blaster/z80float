strint=scrap+25

str2single:
;;Need to process special values like ZERO, NAN, INF
    push af
    push hl
    push de
    push bc
    ld a,(hl)
    sub $1A
    sub 1
    push af
    jr nc,$+3
    inc hl
    ld bc,0
    ld a,(hl)
    cp '.'
    jr nz,lbl0
strisdec:
    inc hl
    ld a,(hl)
    dec b
    cp '0'
    jr z,strisdec
    inc c
    inc b
    jr lbl1
lbl0:
    ld a,(hl)
    cp '0'
    inc hl
    jr z,$-4
    cp '.'
    jr z,strisdec+1
    dec hl
lbl1:
    ld de,scrap
    ld a,7
loop0:
    push af
    ld a,(hl)
    ld (de),a
    cp '.'
    jr nz,$+5
    inc c
    inc hl
    ld a,(hl)
    ld (de),a
    sub 3Ah
    add a,10
    jr nc,intcopied
    inc hl
    inc de
    ld a,b
    sub c
    ld b,a
    pop af
    dec a
    jr nz,loop0
    push af
    dec hl
    inc hl
    ld a,(hl)
    sub 3Ah
    add a,10
    jr c,$-6
intcopied:
    pop af
    ld a,(hl)
    cp $1B
    jr nz,no_eng_adjust
    ;;This means it was the engineering E, need to get the signed int, add to C
no_eng_adjust:
    xor a
    ld (de),a
    push bc

    ld hl,scrap
    call str2int    ;preserves no registers, returns in DEHL
    ld b,31+128
    ld a,d \ or a \ jp m,$+18
    or e \ or h \ or l \ jp z,str_is_zero \ ld a,d
    dec b \ add hl,hl \ rl e \ adc a,a \ jp p,$-5
    ld (strint),hl
    pop hl
    ex de,hl
    rla
    ld h,a
    pop af
    rr h
    ld (strint+2),hl
    ld a,b
    ld (strint+4),a

    ld hl,0
    ld (scrap),hl
    ld a,d
    add a,a
    ld b,7
    push af
    jr nc,$+4
    neg
    add a,a \ jr c,$+4 \ djnz $-3
    dec b
    ld l,a
    pop af
    rr l
    ld h,b
    set 7,h
    ld (scrap+2),hl
    ld hl,scrap
    pop bc
    call pow10Single
    ld de,strint+1
    call mulSingle
    pop de
    pop hl
    pop af
    ret
str_is_inf:
    pop bc
    pop af
    pop hl
    ld b,h
    ld c,l
    ld (hl),0 \ inc hl
    ld (hl),0 \ inc hl
    ld a,80h
    rra
    ld (hl),a \ inc hl
    ld (hl),0
    pop de
    pop bc
    pop af
    ret
str_is_zero:
    pop bc
    pop af
    pop hl
    ld b,h
    ld c,l
    ld a,0
    ld (hl),a \ inc hl
    ld (hl),a \ inc hl
    rra
    ld (hl),a \ inc hl
    ld (hl),-1
    pop de
    pop bc
    pop af
    ret

str2int:
;;Converts the string pointed to by HL into a 32-bit int in DEHL
    ld b,h
    ld c,l
    ld hl,0
    ld d,h
    ld e,h
mul10intloop:
    ld a,(bc)
    sub 3Ah
    add a,10
    ret nc
    push bc
    push de
    push hl
    add hl,hl \ rl e \ rl d
    add hl,hl \ rl e \ rl d
    pop bc \ add hl,bc \ ex de,hl
    pop bc \ adc hl,bc \ ex de,hl
    add hl,hl \ rl e \ rl d
    pop bc
    inc bc
    add a,l \ ld l,a
    jr nc,mul10intloop
    inc h
    jp nz,mul10intloop
    inc e
    jp nz,mul10intloop
    inc d
    jp mul10intloop
